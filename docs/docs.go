// Package docs GENERATED BY THE COMMAND ABOVE; DO NOT EDIT
// This file was generated by swaggo/swag
package docs

import (
	"bytes"
	"encoding/json"
	"strings"
	"text/template"

	"github.com/swaggo/swag"
)

var doc = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/delete-food": {
            "post": {
                "description": "Delete a food that is eaten",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "food"
                ],
                "summary": "Delete a food",
                "parameters": [
                    {
                        "description": "Delete food",
                        "name": "food",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Food"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                }
            }
        },
        "/food": {
            "get": {
                "description": "Get food from dailyfood database",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "food"
                ],
                "summary": "Get food request",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Food"
                            }
                        }
                    }
                }
            },
            "put": {
                "description": "Edit a food with the input paylod",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "food"
                ],
                "summary": "Edit a food",
                "parameters": [
                    {
                        "description": "Edit food",
                        "name": "food",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Food"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                }
            },
            "post": {
                "description": "Create a new food with the input paylod",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "food"
                ],
                "summary": "Create a new food",
                "parameters": [
                    {
                        "description": "Create food",
                        "name": "food",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Food"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                }
            }
        },
        "/foodstore": {
            "get": {
                "description": "Get foodstore from dailyfood database",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "foodstore"
                ],
                "summary": "Get foodstore request",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.FoodStore"
                            }
                        }
                    }
                }
            }
        },
        "/seasoning": {
            "get": {
                "description": "Get seasoning from dailyfood database",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "seasoning"
                ],
                "summary": "Get seasoning request",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Seasoning"
                            }
                        }
                    }
                }
            },
            "post": {
                "description": "Create a new seasoning with the input paylod",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "seasoning"
                ],
                "summary": "Create a new seasoning",
                "parameters": [
                    {
                        "description": "Create seasoning",
                        "name": "seasoning",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Food"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                }
            }
        },
        "/seasoningstore": {
            "get": {
                "description": "Get seasoningstore from dailyfood database",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "seasoningstore"
                ],
                "summary": "Get seasoningstore request",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.SeasoningStore"
                            }
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "models.Food": {
            "type": "object",
            "properties": {
                "category": {
                    "type": "string",
                    "example": "meat"
                },
                "created_at": {
                    "type": "integer",
                    "example": 1636864591642
                },
                "food_id": {
                    "type": "integer",
                    "example": 15
                },
                "id": {
                    "type": "integer",
                    "example": 1
                },
                "is_eaten": {
                    "type": "boolean",
                    "example": false
                },
                "name": {
                    "type": "string",
                    "example": "Pork"
                },
                "owner_id": {
                    "type": "integer",
                    "example": 12
                },
                "owner_name": {
                    "type": "string",
                    "example": "Peter"
                },
                "price": {
                    "type": "number",
                    "example": 5.18
                },
                "quantity": {
                    "type": "number",
                    "example": 12
                },
                "shelf_life": {
                    "type": "integer",
                    "example": 30
                },
                "src": {
                    "type": "string",
                    "example": "http://imageurl"
                }
            }
        },
        "models.FoodStore": {
            "type": "object",
            "properties": {
                "category": {
                    "type": "string",
                    "example": "meat"
                },
                "id": {
                    "type": "integer",
                    "example": 1
                },
                "name": {
                    "type": "string",
                    "example": "Pork"
                },
                "shelf_life": {
                    "type": "integer",
                    "example": 30
                },
                "src": {
                    "type": "string",
                    "example": "http://imageurl"
                }
            }
        },
        "models.Seasoning": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "integer",
                    "example": 1636864591642
                },
                "id": {
                    "type": "integer",
                    "example": 1
                },
                "is_eaten": {
                    "type": "boolean",
                    "example": false
                },
                "name": {
                    "type": "string",
                    "example": "Salt"
                },
                "owner_id": {
                    "type": "integer",
                    "example": 12
                },
                "owner_name": {
                    "type": "string",
                    "example": "Peter"
                },
                "quantity": {
                    "type": "number",
                    "example": 12
                },
                "seasoning_id": {
                    "type": "integer",
                    "example": 15
                },
                "src": {
                    "type": "string",
                    "example": "http://imageurl"
                }
            }
        },
        "models.SeasoningStore": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "example": 1
                },
                "name": {
                    "type": "string",
                    "example": "Salt"
                },
                "src": {
                    "type": "string",
                    "example": "http://imageurl"
                }
            }
        }
    }
}`

type swaggerInfo struct {
	Version     string
	Host        string
	BasePath    string
	Schemes     []string
	Title       string
	Description string
}

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = swaggerInfo{
	Version:     "",
	Host:        "",
	BasePath:    "",
	Schemes:     []string{},
	Title:       "",
	Description: "",
}

type s struct{}

func (s *s) ReadDoc() string {
	sInfo := SwaggerInfo
	sInfo.Description = strings.Replace(sInfo.Description, "\n", "\\n", -1)

	t, err := template.New("swagger_info").Funcs(template.FuncMap{
		"marshal": func(v interface{}) string {
			a, _ := json.Marshal(v)
			return string(a)
		},
		"escape": func(v interface{}) string {
			// escape tabs
			str := strings.Replace(v.(string), "\t", "\\t", -1)
			// replace " with \", and if that results in \\", replace that with \\\"
			str = strings.Replace(str, "\"", "\\\"", -1)
			return strings.Replace(str, "\\\\\"", "\\\\\\\"", -1)
		},
	}).Parse(doc)
	if err != nil {
		return doc
	}

	var tpl bytes.Buffer
	if err := t.Execute(&tpl, sInfo); err != nil {
		return doc
	}

	return tpl.String()
}

func init() {
	swag.Register("swagger", &s{})
}
